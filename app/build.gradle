/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/9.0.0/userguide/building_java_projects.html in the Gradle documentation.
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
    id 'java'

}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Testing
    testImplementation 'org.junit.jupiter:junit-jupiter:5.10.0'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    // Libraries for app
    implementation 'com.google.guava:guava:32.1.2-jre'  // utilities
    implementation 'org.jsoup:jsoup:1.16.1'              // HTML parsing
    implementation 'org.apache.opennlp:opennlp-tools:2.2.0'  // NLP
    implementation 'com.optimaize.languagedetector:language-detector:0.6' // language detection
    implementation 'mysql:mysql-connector-java:8.0.33'   // JDBC
    implementation 'org.slf4j:slf4j-api:2.0.9'          // logging API
    runtimeOnly 'ch.qos.logback:logback-classic:1.4.11' // logging implementation
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.16.2' // JSON optional
}


// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

application {
    // Define the main class for the application.
    mainClass = 'com.example.App'
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}
tasks.named('run') {
    standardInput = System.in
}

